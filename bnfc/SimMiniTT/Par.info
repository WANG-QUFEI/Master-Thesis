-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from SimMiniTT/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Id -> L_Id                                         (1)
	Program -> ListDecl                                (2)
	Exp3 -> Id                                         (3)
	Exp3 -> '*'                                        (4)
	Exp3 -> '(' Exp ')'                                (5)
	Exp2 -> Exp2 Exp3                                  (6)
	Exp2 -> Exp3                                       (7)
	Exp1 -> Exp2 '->' Exp1                             (8)
	Exp1 -> Exp2 '→' Exp1                              (9)
	Exp1 -> Exp2                                       (10)
	Exp -> ListParam Exp1                              (11)
	Exp -> Exp1                                        (12)
	Param -> '[' Decl1 ']'                             (13)
	Decl1 -> Id ':' Exp                                (14)
	Decl1 -> '(' Decl ')'                              (15)
	Decl -> Id ':' Exp '=' Exp                         (16)
	Decl -> Decl1                                      (17)
	ListDecl ->                                        (18)
	ListDecl -> Decl                                   (19)
	ListDecl -> Decl ';' ListDecl                      (20)
	ListParam -> Param                                 (21)
	ListParam -> Param ListParam                       (22)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'->'           { PT _ (TS _ 4) }
	':'            { PT _ (TS _ 5) }
	';'            { PT _ (TS _ 6) }
	'='            { PT _ (TS _ 7) }
	'['            { PT _ (TS _ 8) }
	']'            { PT _ (TS _ 9) }
	'→'            { PT _ (TS _ 10) }
	L_Id           { PT _ (T_Id _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Id              rule  1
	Program         rule  2
	Exp3            rules 3, 4, 5
	Exp2            rules 6, 7
	Exp1            rules 8, 9, 10
	Exp             rules 11, 12
	Param           rule  13
	Decl1           rules 14, 15
	Decl            rules 16, 17
	ListDecl        rules 18, 19, 20
	ListParam       rules 21, 22

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'('            shift, and enter state 8
	L_Id           shift, and enter state 2
	%eof           reduce using rule 18

	Id             goto state 3
	Program        goto state 4
	Decl1          goto state 5
	Decl           goto state 6
	ListDecl       goto state 7

State 1

	Id -> . L_Id                                        (rule 1)

	L_Id           shift, and enter state 2


State 2

	Id -> L_Id .                                        (rule 1)

	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'->'           reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'='            reduce using rule 1
	']'            reduce using rule 1
	'→'            reduce using rule 1
	L_Id           reduce using rule 1
	%eof           reduce using rule 1


State 3

	Decl1 -> Id . ':' Exp                               (rule 14)
	Decl -> Id . ':' Exp '=' Exp                        (rule 16)

	':'            shift, and enter state 11


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	Decl -> Decl1 .                                     (rule 17)

	')'            reduce using rule 17
	';'            reduce using rule 17
	%eof           reduce using rule 17


State 6

	ListDecl -> Decl .                                  (rule 19)
	ListDecl -> Decl . ';' ListDecl                     (rule 20)

	';'            shift, and enter state 10
	%eof           reduce using rule 19


State 7

	Program -> ListDecl .                               (rule 2)

	%eof           reduce using rule 2


State 8

	Decl1 -> '(' . Decl ')'                             (rule 15)

	'('            shift, and enter state 8
	L_Id           shift, and enter state 2

	Id             goto state 3
	Decl1          goto state 5
	Decl           goto state 9

State 9

	Decl1 -> '(' Decl . ')'                             (rule 15)

	')'            shift, and enter state 23


State 10

	ListDecl -> Decl ';' . ListDecl                     (rule 20)

	'('            shift, and enter state 8
	L_Id           shift, and enter state 2
	%eof           reduce using rule 18

	Id             goto state 3
	Decl1          goto state 5
	Decl           goto state 6
	ListDecl       goto state 22

State 11

	Decl1 -> Id ':' . Exp                               (rule 14)
	Decl -> Id ':' . Exp '=' Exp                        (rule 16)

	'('            shift, and enter state 19
	'*'            shift, and enter state 20
	'['            shift, and enter state 21
	L_Id           shift, and enter state 2

	Id             goto state 12
	Exp3           goto state 13
	Exp2           goto state 14
	Exp1           goto state 15
	Exp            goto state 16
	Param          goto state 17
	ListParam      goto state 18

State 12

	Exp3 -> Id .                                        (rule 3)

	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'->'           reduce using rule 3
	';'            reduce using rule 3
	'='            reduce using rule 3
	']'            reduce using rule 3
	'→'            reduce using rule 3
	L_Id           reduce using rule 3
	%eof           reduce using rule 3


State 13

	Exp2 -> Exp3 .                                      (rule 7)

	'('            reduce using rule 7
	')'            reduce using rule 7
	'*'            reduce using rule 7
	'->'           reduce using rule 7
	';'            reduce using rule 7
	'='            reduce using rule 7
	']'            reduce using rule 7
	'→'            reduce using rule 7
	L_Id           reduce using rule 7
	%eof           reduce using rule 7


State 14

	Exp2 -> Exp2 . Exp3                                 (rule 6)
	Exp1 -> Exp2 . '->' Exp1                            (rule 8)
	Exp1 -> Exp2 . '→' Exp1                             (rule 9)
	Exp1 -> Exp2 .                                      (rule 10)

	'('            shift, and enter state 19
	')'            reduce using rule 10
	'*'            shift, and enter state 20
	'->'           shift, and enter state 31
	';'            reduce using rule 10
	'='            reduce using rule 10
	']'            reduce using rule 10
	'→'            shift, and enter state 32
	L_Id           shift, and enter state 2
	%eof           reduce using rule 10

	Id             goto state 12
	Exp3           goto state 30

State 15

	Exp -> Exp1 .                                       (rule 12)

	')'            reduce using rule 12
	';'            reduce using rule 12
	'='            reduce using rule 12
	']'            reduce using rule 12
	%eof           reduce using rule 12


State 16

	Decl1 -> Id ':' Exp .                               (rule 14)
	Decl -> Id ':' Exp . '=' Exp                        (rule 16)

	')'            reduce using rule 14
	';'            reduce using rule 14
	'='            shift, and enter state 29
	%eof           reduce using rule 14


State 17

	ListParam -> Param .                                (rule 21)
	ListParam -> Param . ListParam                      (rule 22)

	'('            reduce using rule 21
	'*'            reduce using rule 21
	'['            shift, and enter state 21
	L_Id           reduce using rule 21

	Param          goto state 17
	ListParam      goto state 28

State 18

	Exp -> ListParam . Exp1                             (rule 11)

	'('            shift, and enter state 19
	'*'            shift, and enter state 20
	L_Id           shift, and enter state 2

	Id             goto state 12
	Exp3           goto state 13
	Exp2           goto state 14
	Exp1           goto state 27

State 19

	Exp3 -> '(' . Exp ')'                               (rule 5)

	'('            shift, and enter state 19
	'*'            shift, and enter state 20
	'['            shift, and enter state 21
	L_Id           shift, and enter state 2

	Id             goto state 12
	Exp3           goto state 13
	Exp2           goto state 14
	Exp1           goto state 15
	Exp            goto state 26
	Param          goto state 17
	ListParam      goto state 18

State 20

	Exp3 -> '*' .                                       (rule 4)

	'('            reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'->'           reduce using rule 4
	';'            reduce using rule 4
	'='            reduce using rule 4
	']'            reduce using rule 4
	'→'            reduce using rule 4
	L_Id           reduce using rule 4
	%eof           reduce using rule 4


State 21

	Param -> '[' . Decl1 ']'                            (rule 13)

	'('            shift, and enter state 8
	L_Id           shift, and enter state 2

	Id             goto state 24
	Decl1          goto state 25

State 22

	ListDecl -> Decl ';' ListDecl .                     (rule 20)

	%eof           reduce using rule 20


State 23

	Decl1 -> '(' Decl ')' .                             (rule 15)

	')'            reduce using rule 15
	';'            reduce using rule 15
	']'            reduce using rule 15
	%eof           reduce using rule 15


State 24

	Decl1 -> Id . ':' Exp                               (rule 14)

	':'            shift, and enter state 38


State 25

	Param -> '[' Decl1 . ']'                            (rule 13)

	']'            shift, and enter state 37


State 26

	Exp3 -> '(' Exp . ')'                               (rule 5)

	')'            shift, and enter state 36


State 27

	Exp -> ListParam Exp1 .                             (rule 11)

	')'            reduce using rule 11
	';'            reduce using rule 11
	'='            reduce using rule 11
	']'            reduce using rule 11
	%eof           reduce using rule 11


State 28

	ListParam -> Param ListParam .                      (rule 22)

	'('            reduce using rule 22
	'*'            reduce using rule 22
	L_Id           reduce using rule 22


State 29

	Decl -> Id ':' Exp '=' . Exp                        (rule 16)

	'('            shift, and enter state 19
	'*'            shift, and enter state 20
	'['            shift, and enter state 21
	L_Id           shift, and enter state 2

	Id             goto state 12
	Exp3           goto state 13
	Exp2           goto state 14
	Exp1           goto state 15
	Exp            goto state 35
	Param          goto state 17
	ListParam      goto state 18

State 30

	Exp2 -> Exp2 Exp3 .                                 (rule 6)

	'('            reduce using rule 6
	')'            reduce using rule 6
	'*'            reduce using rule 6
	'->'           reduce using rule 6
	';'            reduce using rule 6
	'='            reduce using rule 6
	']'            reduce using rule 6
	'→'            reduce using rule 6
	L_Id           reduce using rule 6
	%eof           reduce using rule 6


State 31

	Exp1 -> Exp2 '->' . Exp1                            (rule 8)

	'('            shift, and enter state 19
	'*'            shift, and enter state 20
	L_Id           shift, and enter state 2

	Id             goto state 12
	Exp3           goto state 13
	Exp2           goto state 14
	Exp1           goto state 34

State 32

	Exp1 -> Exp2 '→' . Exp1                             (rule 9)

	'('            shift, and enter state 19
	'*'            shift, and enter state 20
	L_Id           shift, and enter state 2

	Id             goto state 12
	Exp3           goto state 13
	Exp2           goto state 14
	Exp1           goto state 33

State 33

	Exp1 -> Exp2 '→' Exp1 .                             (rule 9)

	')'            reduce using rule 9
	';'            reduce using rule 9
	'='            reduce using rule 9
	']'            reduce using rule 9
	%eof           reduce using rule 9


State 34

	Exp1 -> Exp2 '->' Exp1 .                            (rule 8)

	')'            reduce using rule 8
	';'            reduce using rule 8
	'='            reduce using rule 8
	']'            reduce using rule 8
	%eof           reduce using rule 8


State 35

	Decl -> Id ':' Exp '=' Exp .                        (rule 16)

	')'            reduce using rule 16
	';'            reduce using rule 16
	%eof           reduce using rule 16


State 36

	Exp3 -> '(' Exp ')' .                               (rule 5)

	'('            reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'->'           reduce using rule 5
	';'            reduce using rule 5
	'='            reduce using rule 5
	']'            reduce using rule 5
	'→'            reduce using rule 5
	L_Id           reduce using rule 5
	%eof           reduce using rule 5


State 37

	Param -> '[' Decl1 ']' .                            (rule 13)

	'('            reduce using rule 13
	'*'            reduce using rule 13
	'['            reduce using rule 13
	L_Id           reduce using rule 13


State 38

	Decl1 -> Id ':' . Exp                               (rule 14)

	'('            shift, and enter state 19
	'*'            shift, and enter state 20
	'['            shift, and enter state 21
	L_Id           shift, and enter state 2

	Id             goto state 12
	Exp3           goto state 13
	Exp2           goto state 14
	Exp1           goto state 15
	Exp            goto state 39
	Param          goto state 17
	ListParam      goto state 18

State 39

	Decl1 -> Id ':' Exp .                               (rule 14)

	']'            reduce using rule 14


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 23
Number of terminals: 11
Number of non-terminals: 12
Number of states: 40
