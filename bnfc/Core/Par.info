-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Core/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pContext -> Context                         (0)
	Id -> L_Id                                         (1)
	Context -> ListDecl                                (2)
	Exp3 -> '*'                                        (3)
	Exp3 -> Id                                         (4)
	Exp3 -> '(' Exp ')'                                (5)
	Exp2 -> Exp2 Exp3                                  (6)
	Exp2 -> Exp3                                       (7)
	Exp1 -> Exp2 '->' Exp1                             (8)
	Exp1 -> '[' Decl ']' Exp1                          (9)
	Exp1 -> Exp2                                       (10)
	Exp -> Exp '[' Decl ']'                            (11)
	Exp -> Exp1                                        (12)
	Decl -> Id ':' Exp                                 (13)
	Decl -> Id ':' Exp '=' Exp                         (14)
	ListDecl ->                                        (15)
	ListDecl -> Decl                                   (16)
	ListDecl -> Decl ';' ListDecl                      (17)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'->'           { PT _ (TS _ 4) }
	':'            { PT _ (TS _ 5) }
	';'            { PT _ (TS _ 6) }
	'='            { PT _ (TS _ 7) }
	'['            { PT _ (TS _ 8) }
	']'            { PT _ (TS _ 9) }
	L_Id           { PT _ (T_Id _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pContext rule  0
	Id              rule  1
	Context         rule  2
	Exp3            rules 3, 4, 5
	Exp2            rules 6, 7
	Exp1            rules 8, 9, 10
	Exp             rules 11, 12
	Decl            rules 13, 14
	ListDecl        rules 15, 16, 17

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pContext -> . Context                        (rule 0)

	L_Id           shift, and enter state 2
	%eof           reduce using rule 15

	Id             goto state 3
	Context        goto state 4
	Decl           goto state 5
	ListDecl       goto state 6

State 1

	Id -> . L_Id                                        (rule 1)

	L_Id           shift, and enter state 2


State 2

	Id -> L_Id .                                        (rule 1)

	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'->'           reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'='            reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	L_Id           reduce using rule 1
	%eof           reduce using rule 1


State 3

	Decl -> Id . ':' Exp                                (rule 13)
	Decl -> Id . ':' Exp '=' Exp                        (rule 14)

	':'            shift, and enter state 8


State 4

	%start_pContext -> Context .                        (rule 0)

	%eof           accept


State 5

	ListDecl -> Decl .                                  (rule 16)
	ListDecl -> Decl . ';' ListDecl                     (rule 17)

	';'            shift, and enter state 7
	%eof           reduce using rule 16


State 6

	Context -> ListDecl .                               (rule 2)

	%eof           reduce using rule 2


State 7

	ListDecl -> Decl ';' . ListDecl                     (rule 17)

	L_Id           shift, and enter state 2
	%eof           reduce using rule 15

	Id             goto state 3
	Decl           goto state 5
	ListDecl       goto state 17

State 8

	Decl -> Id ':' . Exp                                (rule 13)
	Decl -> Id ':' . Exp '=' Exp                        (rule 14)

	'('            shift, and enter state 14
	'*'            shift, and enter state 15
	'['            shift, and enter state 16
	L_Id           shift, and enter state 2

	Id             goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 13

State 9

	Exp3 -> Id .                                        (rule 4)

	'('            reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'->'           reduce using rule 4
	';'            reduce using rule 4
	'='            reduce using rule 4
	'['            reduce using rule 4
	']'            reduce using rule 4
	L_Id           reduce using rule 4
	%eof           reduce using rule 4


State 10

	Exp2 -> Exp3 .                                      (rule 7)

	'('            reduce using rule 7
	')'            reduce using rule 7
	'*'            reduce using rule 7
	'->'           reduce using rule 7
	';'            reduce using rule 7
	'='            reduce using rule 7
	'['            reduce using rule 7
	']'            reduce using rule 7
	L_Id           reduce using rule 7
	%eof           reduce using rule 7


State 11

	Exp2 -> Exp2 . Exp3                                 (rule 6)
	Exp1 -> Exp2 . '->' Exp1                            (rule 8)
	Exp1 -> Exp2 .                                      (rule 10)

	'('            shift, and enter state 14
	')'            reduce using rule 10
	'*'            shift, and enter state 15
	'->'           shift, and enter state 23
	';'            reduce using rule 10
	'='            reduce using rule 10
	'['            reduce using rule 10
	']'            reduce using rule 10
	L_Id           shift, and enter state 2
	%eof           reduce using rule 10

	Id             goto state 9
	Exp3           goto state 22

State 12

	Exp -> Exp1 .                                       (rule 12)

	')'            reduce using rule 12
	';'            reduce using rule 12
	'='            reduce using rule 12
	'['            reduce using rule 12
	']'            reduce using rule 12
	%eof           reduce using rule 12


State 13

	Exp -> Exp . '[' Decl ']'                           (rule 11)
	Decl -> Id ':' Exp .                                (rule 13)
	Decl -> Id ':' Exp . '=' Exp                        (rule 14)

	';'            reduce using rule 13
	'='            shift, and enter state 20
	'['            shift, and enter state 21
	']'            reduce using rule 13
	%eof           reduce using rule 13


State 14

	Exp3 -> '(' . Exp ')'                               (rule 5)

	'('            shift, and enter state 14
	'*'            shift, and enter state 15
	'['            shift, and enter state 16
	L_Id           shift, and enter state 2

	Id             goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 19

State 15

	Exp3 -> '*' .                                       (rule 3)

	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'->'           reduce using rule 3
	';'            reduce using rule 3
	'='            reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	L_Id           reduce using rule 3
	%eof           reduce using rule 3


State 16

	Exp1 -> '[' . Decl ']' Exp1                         (rule 9)

	L_Id           shift, and enter state 2

	Id             goto state 3
	Decl           goto state 18

State 17

	ListDecl -> Decl ';' ListDecl .                     (rule 17)

	%eof           reduce using rule 17


State 18

	Exp1 -> '[' Decl . ']' Exp1                         (rule 9)

	']'            shift, and enter state 28


State 19

	Exp3 -> '(' Exp . ')'                               (rule 5)
	Exp -> Exp . '[' Decl ']'                           (rule 11)

	')'            shift, and enter state 27
	'['            shift, and enter state 21


State 20

	Decl -> Id ':' Exp '=' . Exp                        (rule 14)

	'('            shift, and enter state 14
	'*'            shift, and enter state 15
	'['            shift, and enter state 16
	L_Id           shift, and enter state 2

	Id             goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 12
	Exp            goto state 26

State 21

	Exp -> Exp '[' . Decl ']'                           (rule 11)

	L_Id           shift, and enter state 2

	Id             goto state 3
	Decl           goto state 25

State 22

	Exp2 -> Exp2 Exp3 .                                 (rule 6)

	'('            reduce using rule 6
	')'            reduce using rule 6
	'*'            reduce using rule 6
	'->'           reduce using rule 6
	';'            reduce using rule 6
	'='            reduce using rule 6
	'['            reduce using rule 6
	']'            reduce using rule 6
	L_Id           reduce using rule 6
	%eof           reduce using rule 6


State 23

	Exp1 -> Exp2 '->' . Exp1                            (rule 8)

	'('            shift, and enter state 14
	'*'            shift, and enter state 15
	'['            shift, and enter state 16
	L_Id           shift, and enter state 2

	Id             goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 24

State 24

	Exp1 -> Exp2 '->' Exp1 .                            (rule 8)

	')'            reduce using rule 8
	';'            reduce using rule 8
	'='            reduce using rule 8
	'['            reduce using rule 8
	']'            reduce using rule 8
	%eof           reduce using rule 8


State 25

	Exp -> Exp '[' Decl . ']'                           (rule 11)

	']'            shift, and enter state 30


State 26

	Exp -> Exp . '[' Decl ']'                           (rule 11)
	Decl -> Id ':' Exp '=' Exp .                        (rule 14)

	';'            reduce using rule 14
	'['            shift, and enter state 21
	']'            reduce using rule 14
	%eof           reduce using rule 14


State 27

	Exp3 -> '(' Exp ')' .                               (rule 5)

	'('            reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'->'           reduce using rule 5
	';'            reduce using rule 5
	'='            reduce using rule 5
	'['            reduce using rule 5
	']'            reduce using rule 5
	L_Id           reduce using rule 5
	%eof           reduce using rule 5


State 28

	Exp1 -> '[' Decl ']' . Exp1                         (rule 9)

	'('            shift, and enter state 14
	'*'            shift, and enter state 15
	'['            shift, and enter state 16
	L_Id           shift, and enter state 2

	Id             goto state 9
	Exp3           goto state 10
	Exp2           goto state 11
	Exp1           goto state 29

State 29

	Exp1 -> '[' Decl ']' Exp1 .                         (rule 9)

	')'            reduce using rule 9
	';'            reduce using rule 9
	'='            reduce using rule 9
	'['            reduce using rule 9
	']'            reduce using rule 9
	%eof           reduce using rule 9


State 30

	Exp -> Exp '[' Decl ']' .                           (rule 11)

	')'            reduce using rule 11
	';'            reduce using rule 11
	'='            reduce using rule 11
	'['            reduce using rule 11
	']'            reduce using rule 11
	%eof           reduce using rule 11


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 18
Number of terminals: 10
Number of non-terminals: 9
Number of states: 31
