-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Core/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pContext -> Context                         (0)
	%start_pCmd -> Cmd                                 (1)
	Id -> L_Id                                         (2)
	Context -> ListCDecl                               (3)
	CExp2 -> '*'                                       (4)
	CExp2 -> Id                                        (5)
	CExp2 -> CExp3                                     (6)
	CExp1 -> CExp1 CExp2                               (7)
	CExp1 -> CExp2                                     (8)
	CExp -> CExp1 '->' CExp                            (9)
	CExp -> '[' Id ':' CExp ']' CExp                   (10)
	CExp -> '[' Id ':' CExp '=' CExp ']' CExp          (11)
	CExp -> CExp1                                      (12)
	CDecl -> Id ':' CExp                               (13)
	CDecl -> Id ':' CExp '=' CExp                      (14)
	ListCDecl ->                                       (15)
	ListCDecl -> CDecl ';' ListCDecl                   (16)
	CExp3 -> '(' CExp ')'                              (17)
	Cmd -> ':?'                                        (18)
	Cmd -> ':help'                                     (19)
	Cmd -> ':q'                                        (20)
	Cmd -> ':quit'                                     (21)
	Cmd -> ':show-context'                             (22)
	Cmd -> ':rb' CExp                                  (23)
	Cmd -> ':hRed' CExp                                (24)
	Cmd -> ':incrEval' CExp                            (25)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'->'           { PT _ (TS _ 4) }
	':'            { PT _ (TS _ 5) }
	':?'           { PT _ (TS _ 6) }
	':hRed'        { PT _ (TS _ 7) }
	':help'        { PT _ (TS _ 8) }
	':incrEval'    { PT _ (TS _ 9) }
	':q'           { PT _ (TS _ 10) }
	':quit'        { PT _ (TS _ 11) }
	':rb'          { PT _ (TS _ 12) }
	':show-context'{ PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'='            { PT _ (TS _ 15) }
	'['            { PT _ (TS _ 16) }
	']'            { PT _ (TS _ 17) }
	L_Id           { PT _ (T_Id _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pContext rule  0
	%start_pCmd     rule  1
	Id              rule  2
	Context         rule  3
	CExp2           rules 4, 5, 6
	CExp1           rules 7, 8
	CExp            rules 9, 10, 11, 12
	CDecl           rules 13, 14
	ListCDecl       rules 15, 16
	CExp3           rule  17
	Cmd             rules 18, 19, 20, 21, 22, 23, 24, 25

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pContext -> . Context                        (rule 0)

	L_Id           shift, and enter state 3
	%eof           reduce using rule 15

	Id             goto state 13
	Context        goto state 14
	CDecl          goto state 15
	ListCDecl      goto state 16

State 1

	%start_pCmd -> . Cmd                                (rule 1)

	':?'           shift, and enter state 5
	':hRed'        shift, and enter state 6
	':help'        shift, and enter state 7
	':incrEval'    shift, and enter state 8
	':q'           shift, and enter state 9
	':quit'        shift, and enter state 10
	':rb'          shift, and enter state 11
	':show-context'shift, and enter state 12

	Cmd            goto state 4

State 2

	Id -> . L_Id                                        (rule 2)

	L_Id           shift, and enter state 3


State 3

	Id -> L_Id .                                        (rule 2)

	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'->'           reduce using rule 2
	':'            reduce using rule 2
	';'            reduce using rule 2
	'='            reduce using rule 2
	']'            reduce using rule 2
	L_Id           reduce using rule 2
	%eof           reduce using rule 2


State 4

	%start_pCmd -> Cmd .                                (rule 1)

	%eof           accept


State 5

	Cmd -> ':?' .                                       (rule 18)

	%eof           reduce using rule 18


State 6

	Cmd -> ':hRed' . CExp                               (rule 24)

	'('            shift, and enter state 24
	'*'            shift, and enter state 25
	'['            shift, and enter state 26
	L_Id           shift, and enter state 3

	Id             goto state 19
	CExp2          goto state 20
	CExp1          goto state 21
	CExp           goto state 28
	CExp3          goto state 23

State 7

	Cmd -> ':help' .                                    (rule 19)

	%eof           reduce using rule 19


State 8

	Cmd -> ':incrEval' . CExp                           (rule 25)

	'('            shift, and enter state 24
	'*'            shift, and enter state 25
	'['            shift, and enter state 26
	L_Id           shift, and enter state 3

	Id             goto state 19
	CExp2          goto state 20
	CExp1          goto state 21
	CExp           goto state 27
	CExp3          goto state 23

State 9

	Cmd -> ':q' .                                       (rule 20)

	%eof           reduce using rule 20


State 10

	Cmd -> ':quit' .                                    (rule 21)

	%eof           reduce using rule 21


State 11

	Cmd -> ':rb' . CExp                                 (rule 23)

	'('            shift, and enter state 24
	'*'            shift, and enter state 25
	'['            shift, and enter state 26
	L_Id           shift, and enter state 3

	Id             goto state 19
	CExp2          goto state 20
	CExp1          goto state 21
	CExp           goto state 22
	CExp3          goto state 23

State 12

	Cmd -> ':show-context' .                            (rule 22)

	%eof           reduce using rule 22


State 13

	CDecl -> Id . ':' CExp                              (rule 13)
	CDecl -> Id . ':' CExp '=' CExp                     (rule 14)

	':'            shift, and enter state 18


State 14

	%start_pContext -> Context .                        (rule 0)

	%eof           accept


State 15

	ListCDecl -> CDecl . ';' ListCDecl                  (rule 16)

	';'            shift, and enter state 17


State 16

	Context -> ListCDecl .                              (rule 3)

	%eof           reduce using rule 3


State 17

	ListCDecl -> CDecl ';' . ListCDecl                  (rule 16)

	L_Id           shift, and enter state 3
	%eof           reduce using rule 15

	Id             goto state 13
	CDecl          goto state 15
	ListCDecl      goto state 34

State 18

	CDecl -> Id ':' . CExp                              (rule 13)
	CDecl -> Id ':' . CExp '=' CExp                     (rule 14)

	'('            shift, and enter state 24
	'*'            shift, and enter state 25
	'['            shift, and enter state 26
	L_Id           shift, and enter state 3

	Id             goto state 19
	CExp2          goto state 20
	CExp1          goto state 21
	CExp           goto state 33
	CExp3          goto state 23

State 19

	CExp2 -> Id .                                       (rule 5)

	'('            reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'->'           reduce using rule 5
	';'            reduce using rule 5
	'='            reduce using rule 5
	']'            reduce using rule 5
	L_Id           reduce using rule 5
	%eof           reduce using rule 5


State 20

	CExp1 -> CExp2 .                                    (rule 8)

	'('            reduce using rule 8
	')'            reduce using rule 8
	'*'            reduce using rule 8
	'->'           reduce using rule 8
	';'            reduce using rule 8
	'='            reduce using rule 8
	']'            reduce using rule 8
	L_Id           reduce using rule 8
	%eof           reduce using rule 8


State 21

	CExp1 -> CExp1 . CExp2                              (rule 7)
	CExp -> CExp1 . '->' CExp                           (rule 9)
	CExp -> CExp1 .                                     (rule 12)

	'('            shift, and enter state 24
	')'            reduce using rule 12
	'*'            shift, and enter state 25
	'->'           shift, and enter state 32
	';'            reduce using rule 12
	'='            reduce using rule 12
	']'            reduce using rule 12
	L_Id           shift, and enter state 3
	%eof           reduce using rule 12

	Id             goto state 19
	CExp2          goto state 31
	CExp3          goto state 23

State 22

	Cmd -> ':rb' CExp .                                 (rule 23)

	%eof           reduce using rule 23


State 23

	CExp2 -> CExp3 .                                    (rule 6)

	'('            reduce using rule 6
	')'            reduce using rule 6
	'*'            reduce using rule 6
	'->'           reduce using rule 6
	';'            reduce using rule 6
	'='            reduce using rule 6
	']'            reduce using rule 6
	L_Id           reduce using rule 6
	%eof           reduce using rule 6


State 24

	CExp3 -> '(' . CExp ')'                             (rule 17)

	'('            shift, and enter state 24
	'*'            shift, and enter state 25
	'['            shift, and enter state 26
	L_Id           shift, and enter state 3

	Id             goto state 19
	CExp2          goto state 20
	CExp1          goto state 21
	CExp           goto state 30
	CExp3          goto state 23

State 25

	CExp2 -> '*' .                                      (rule 4)

	'('            reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'->'           reduce using rule 4
	';'            reduce using rule 4
	'='            reduce using rule 4
	']'            reduce using rule 4
	L_Id           reduce using rule 4
	%eof           reduce using rule 4


State 26

	CExp -> '[' . Id ':' CExp ']' CExp                  (rule 10)
	CExp -> '[' . Id ':' CExp '=' CExp ']' CExp         (rule 11)

	L_Id           shift, and enter state 3

	Id             goto state 29

State 27

	Cmd -> ':incrEval' CExp .                           (rule 25)

	%eof           reduce using rule 25


State 28

	Cmd -> ':hRed' CExp .                               (rule 24)

	%eof           reduce using rule 24


State 29

	CExp -> '[' Id . ':' CExp ']' CExp                  (rule 10)
	CExp -> '[' Id . ':' CExp '=' CExp ']' CExp         (rule 11)

	':'            shift, and enter state 38


State 30

	CExp3 -> '(' CExp . ')'                             (rule 17)

	')'            shift, and enter state 37


State 31

	CExp1 -> CExp1 CExp2 .                              (rule 7)

	'('            reduce using rule 7
	')'            reduce using rule 7
	'*'            reduce using rule 7
	'->'           reduce using rule 7
	';'            reduce using rule 7
	'='            reduce using rule 7
	']'            reduce using rule 7
	L_Id           reduce using rule 7
	%eof           reduce using rule 7


State 32

	CExp -> CExp1 '->' . CExp                           (rule 9)

	'('            shift, and enter state 24
	'*'            shift, and enter state 25
	'['            shift, and enter state 26
	L_Id           shift, and enter state 3

	Id             goto state 19
	CExp2          goto state 20
	CExp1          goto state 21
	CExp           goto state 36
	CExp3          goto state 23

State 33

	CDecl -> Id ':' CExp .                              (rule 13)
	CDecl -> Id ':' CExp . '=' CExp                     (rule 14)

	';'            reduce using rule 13
	'='            shift, and enter state 35


State 34

	ListCDecl -> CDecl ';' ListCDecl .                  (rule 16)

	%eof           reduce using rule 16


State 35

	CDecl -> Id ':' CExp '=' . CExp                     (rule 14)

	'('            shift, and enter state 24
	'*'            shift, and enter state 25
	'['            shift, and enter state 26
	L_Id           shift, and enter state 3

	Id             goto state 19
	CExp2          goto state 20
	CExp1          goto state 21
	CExp           goto state 40
	CExp3          goto state 23

State 36

	CExp -> CExp1 '->' CExp .                           (rule 9)

	')'            reduce using rule 9
	';'            reduce using rule 9
	'='            reduce using rule 9
	']'            reduce using rule 9
	%eof           reduce using rule 9


State 37

	CExp3 -> '(' CExp ')' .                             (rule 17)

	'('            reduce using rule 17
	')'            reduce using rule 17
	'*'            reduce using rule 17
	'->'           reduce using rule 17
	';'            reduce using rule 17
	'='            reduce using rule 17
	']'            reduce using rule 17
	L_Id           reduce using rule 17
	%eof           reduce using rule 17


State 38

	CExp -> '[' Id ':' . CExp ']' CExp                  (rule 10)
	CExp -> '[' Id ':' . CExp '=' CExp ']' CExp         (rule 11)

	'('            shift, and enter state 24
	'*'            shift, and enter state 25
	'['            shift, and enter state 26
	L_Id           shift, and enter state 3

	Id             goto state 19
	CExp2          goto state 20
	CExp1          goto state 21
	CExp           goto state 39
	CExp3          goto state 23

State 39

	CExp -> '[' Id ':' CExp . ']' CExp                  (rule 10)
	CExp -> '[' Id ':' CExp . '=' CExp ']' CExp         (rule 11)

	'='            shift, and enter state 41
	']'            shift, and enter state 42


State 40

	CDecl -> Id ':' CExp '=' CExp .                     (rule 14)

	';'            reduce using rule 14


State 41

	CExp -> '[' Id ':' CExp '=' . CExp ']' CExp         (rule 11)

	'('            shift, and enter state 24
	'*'            shift, and enter state 25
	'['            shift, and enter state 26
	L_Id           shift, and enter state 3

	Id             goto state 19
	CExp2          goto state 20
	CExp1          goto state 21
	CExp           goto state 44
	CExp3          goto state 23

State 42

	CExp -> '[' Id ':' CExp ']' . CExp                  (rule 10)

	'('            shift, and enter state 24
	'*'            shift, and enter state 25
	'['            shift, and enter state 26
	L_Id           shift, and enter state 3

	Id             goto state 19
	CExp2          goto state 20
	CExp1          goto state 21
	CExp           goto state 43
	CExp3          goto state 23

State 43

	CExp -> '[' Id ':' CExp ']' CExp .                  (rule 10)

	')'            reduce using rule 10
	';'            reduce using rule 10
	'='            reduce using rule 10
	']'            reduce using rule 10
	%eof           reduce using rule 10


State 44

	CExp -> '[' Id ':' CExp '=' CExp . ']' CExp         (rule 11)

	']'            shift, and enter state 45


State 45

	CExp -> '[' Id ':' CExp '=' CExp ']' . CExp         (rule 11)

	'('            shift, and enter state 24
	'*'            shift, and enter state 25
	'['            shift, and enter state 26
	L_Id           shift, and enter state 3

	Id             goto state 19
	CExp2          goto state 20
	CExp1          goto state 21
	CExp           goto state 46
	CExp3          goto state 23

State 46

	CExp -> '[' Id ':' CExp '=' CExp ']' CExp .         (rule 11)

	')'            reduce using rule 11
	';'            reduce using rule 11
	'='            reduce using rule 11
	']'            reduce using rule 11
	%eof           reduce using rule 11


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 26
Number of terminals: 18
Number of non-terminals: 11
Number of states: 47
