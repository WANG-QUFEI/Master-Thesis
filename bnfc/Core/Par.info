-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Core/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pContext -> Context                         (0)
	Id -> L_Id                                         (1)
	Context -> ListDef                                 (2)
	CExp2 -> '*'                                       (3)
	CExp2 -> Id                                        (4)
	CExp2 -> CExp3                                     (5)
	CExp1 -> CExp1 CExp2                               (6)
	CExp1 -> CExp2                                     (7)
	CExp -> CExp1 '->' CExp                            (8)
	CExp -> '[' Dec ']' CExp                           (9)
	CExp -> '[' Def ']' CExp                           (10)
	CExp -> CExp1                                      (11)
	Dec -> Id ':' CExp                                 (12)
	Def -> Id ':' CExp '=' CExp                        (13)
	ListDef ->                                         (14)
	ListDef -> Def                                     (15)
	ListDef -> Def ';' ListDef                         (16)
	CExp3 -> '(' CExp ')'                              (17)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'->'           { PT _ (TS _ 4) }
	':'            { PT _ (TS _ 5) }
	';'            { PT _ (TS _ 6) }
	'='            { PT _ (TS _ 7) }
	'['            { PT _ (TS _ 8) }
	']'            { PT _ (TS _ 9) }
	L_Id           { PT _ (T_Id _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pContext rule  0
	Id              rule  1
	Context         rule  2
	CExp2           rules 3, 4, 5
	CExp1           rules 6, 7
	CExp            rules 8, 9, 10, 11
	Dec             rule  12
	Def             rule  13
	ListDef         rules 14, 15, 16
	CExp3           rule  17

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pContext -> . Context                        (rule 0)

	L_Id           shift, and enter state 2
	%eof           reduce using rule 14

	Id             goto state 3
	Context        goto state 4
	Def            goto state 5
	ListDef        goto state 6

State 1

	Id -> . L_Id                                        (rule 1)

	L_Id           shift, and enter state 2


State 2

	Id -> L_Id .                                        (rule 1)

	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'->'           reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'='            reduce using rule 1
	']'            reduce using rule 1
	L_Id           reduce using rule 1
	%eof           reduce using rule 1


State 3

	Def -> Id . ':' CExp '=' CExp                       (rule 13)

	':'            shift, and enter state 8


State 4

	%start_pContext -> Context .                        (rule 0)

	%eof           accept


State 5

	ListDef -> Def .                                    (rule 15)
	ListDef -> Def . ';' ListDef                        (rule 16)

	';'            shift, and enter state 7
	%eof           reduce using rule 15


State 6

	Context -> ListDef .                                (rule 2)

	%eof           reduce using rule 2


State 7

	ListDef -> Def ';' . ListDef                        (rule 16)

	L_Id           shift, and enter state 2
	%eof           reduce using rule 14

	Id             goto state 3
	Def            goto state 5
	ListDef        goto state 17

State 8

	Def -> Id ':' . CExp '=' CExp                       (rule 13)

	'('            shift, and enter state 14
	'*'            shift, and enter state 15
	'['            shift, and enter state 16
	L_Id           shift, and enter state 2

	Id             goto state 9
	CExp2          goto state 10
	CExp1          goto state 11
	CExp           goto state 12
	CExp3          goto state 13

State 9

	CExp2 -> Id .                                       (rule 4)

	'('            reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'->'           reduce using rule 4
	';'            reduce using rule 4
	'='            reduce using rule 4
	']'            reduce using rule 4
	L_Id           reduce using rule 4
	%eof           reduce using rule 4


State 10

	CExp1 -> CExp2 .                                    (rule 7)

	'('            reduce using rule 7
	')'            reduce using rule 7
	'*'            reduce using rule 7
	'->'           reduce using rule 7
	';'            reduce using rule 7
	'='            reduce using rule 7
	']'            reduce using rule 7
	L_Id           reduce using rule 7
	%eof           reduce using rule 7


State 11

	CExp1 -> CExp1 . CExp2                              (rule 6)
	CExp -> CExp1 . '->' CExp                           (rule 8)
	CExp -> CExp1 .                                     (rule 11)

	'('            shift, and enter state 14
	')'            reduce using rule 11
	'*'            shift, and enter state 15
	'->'           shift, and enter state 24
	';'            reduce using rule 11
	'='            reduce using rule 11
	']'            reduce using rule 11
	L_Id           shift, and enter state 2
	%eof           reduce using rule 11

	Id             goto state 9
	CExp2          goto state 23
	CExp3          goto state 13

State 12

	Def -> Id ':' CExp . '=' CExp                       (rule 13)

	'='            shift, and enter state 22


State 13

	CExp2 -> CExp3 .                                    (rule 5)

	'('            reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'->'           reduce using rule 5
	';'            reduce using rule 5
	'='            reduce using rule 5
	']'            reduce using rule 5
	L_Id           reduce using rule 5
	%eof           reduce using rule 5


State 14

	CExp3 -> '(' . CExp ')'                             (rule 17)

	'('            shift, and enter state 14
	'*'            shift, and enter state 15
	'['            shift, and enter state 16
	L_Id           shift, and enter state 2

	Id             goto state 9
	CExp2          goto state 10
	CExp1          goto state 11
	CExp           goto state 21
	CExp3          goto state 13

State 15

	CExp2 -> '*' .                                      (rule 3)

	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'->'           reduce using rule 3
	';'            reduce using rule 3
	'='            reduce using rule 3
	']'            reduce using rule 3
	L_Id           reduce using rule 3
	%eof           reduce using rule 3


State 16

	CExp -> '[' . Dec ']' CExp                          (rule 9)
	CExp -> '[' . Def ']' CExp                          (rule 10)

	L_Id           shift, and enter state 2

	Id             goto state 18
	Dec            goto state 19
	Def            goto state 20

State 17

	ListDef -> Def ';' ListDef .                        (rule 16)

	%eof           reduce using rule 16


State 18

	Dec -> Id . ':' CExp                                (rule 12)
	Def -> Id . ':' CExp '=' CExp                       (rule 13)

	':'            shift, and enter state 30


State 19

	CExp -> '[' Dec . ']' CExp                          (rule 9)

	']'            shift, and enter state 29


State 20

	CExp -> '[' Def . ']' CExp                          (rule 10)

	']'            shift, and enter state 28


State 21

	CExp3 -> '(' CExp . ')'                             (rule 17)

	')'            shift, and enter state 27


State 22

	Def -> Id ':' CExp '=' . CExp                       (rule 13)

	'('            shift, and enter state 14
	'*'            shift, and enter state 15
	'['            shift, and enter state 16
	L_Id           shift, and enter state 2

	Id             goto state 9
	CExp2          goto state 10
	CExp1          goto state 11
	CExp           goto state 26
	CExp3          goto state 13

State 23

	CExp1 -> CExp1 CExp2 .                              (rule 6)

	'('            reduce using rule 6
	')'            reduce using rule 6
	'*'            reduce using rule 6
	'->'           reduce using rule 6
	';'            reduce using rule 6
	'='            reduce using rule 6
	']'            reduce using rule 6
	L_Id           reduce using rule 6
	%eof           reduce using rule 6


State 24

	CExp -> CExp1 '->' . CExp                           (rule 8)

	'('            shift, and enter state 14
	'*'            shift, and enter state 15
	'['            shift, and enter state 16
	L_Id           shift, and enter state 2

	Id             goto state 9
	CExp2          goto state 10
	CExp1          goto state 11
	CExp           goto state 25
	CExp3          goto state 13

State 25

	CExp -> CExp1 '->' CExp .                           (rule 8)

	')'            reduce using rule 8
	';'            reduce using rule 8
	'='            reduce using rule 8
	']'            reduce using rule 8
	%eof           reduce using rule 8


State 26

	Def -> Id ':' CExp '=' CExp .                       (rule 13)

	';'            reduce using rule 13
	']'            reduce using rule 13
	%eof           reduce using rule 13


State 27

	CExp3 -> '(' CExp ')' .                             (rule 17)

	'('            reduce using rule 17
	')'            reduce using rule 17
	'*'            reduce using rule 17
	'->'           reduce using rule 17
	';'            reduce using rule 17
	'='            reduce using rule 17
	']'            reduce using rule 17
	L_Id           reduce using rule 17
	%eof           reduce using rule 17


State 28

	CExp -> '[' Def ']' . CExp                          (rule 10)

	'('            shift, and enter state 14
	'*'            shift, and enter state 15
	'['            shift, and enter state 16
	L_Id           shift, and enter state 2

	Id             goto state 9
	CExp2          goto state 10
	CExp1          goto state 11
	CExp           goto state 33
	CExp3          goto state 13

State 29

	CExp -> '[' Dec ']' . CExp                          (rule 9)

	'('            shift, and enter state 14
	'*'            shift, and enter state 15
	'['            shift, and enter state 16
	L_Id           shift, and enter state 2

	Id             goto state 9
	CExp2          goto state 10
	CExp1          goto state 11
	CExp           goto state 32
	CExp3          goto state 13

State 30

	Dec -> Id ':' . CExp                                (rule 12)
	Def -> Id ':' . CExp '=' CExp                       (rule 13)

	'('            shift, and enter state 14
	'*'            shift, and enter state 15
	'['            shift, and enter state 16
	L_Id           shift, and enter state 2

	Id             goto state 9
	CExp2          goto state 10
	CExp1          goto state 11
	CExp           goto state 31
	CExp3          goto state 13

State 31

	Dec -> Id ':' CExp .                                (rule 12)
	Def -> Id ':' CExp . '=' CExp                       (rule 13)

	'='            shift, and enter state 22
	']'            reduce using rule 12


State 32

	CExp -> '[' Dec ']' CExp .                          (rule 9)

	')'            reduce using rule 9
	';'            reduce using rule 9
	'='            reduce using rule 9
	']'            reduce using rule 9
	%eof           reduce using rule 9


State 33

	CExp -> '[' Def ']' CExp .                          (rule 10)

	')'            reduce using rule 10
	';'            reduce using rule 10
	'='            reduce using rule 10
	']'            reduce using rule 10
	%eof           reduce using rule 10


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 18
Number of terminals: 10
Number of non-terminals: 10
Number of states: 34
