-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Core/Par.y
-----------------------------------------------------------------------------

state 7 contains 4 shift/reduce conflicts.
state 24 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Id -> L_Id                                         (1)
	Program -> ListExp                                 (2)
	Exp4 -> Id ':' Exp                                 (3)
	Exp4 -> '(' Exp ')'                                (4)
	Exp3 -> Id                                         (5)
	Exp3 -> '*'                                        (6)
	Exp3 -> Exp4                                       (7)
	Exp2 -> Exp2 Exp3                                  (8)
	Exp2 -> Exp3                                       (9)
	Exp1 -> Exp2 '->' Exp1                             (10)
	Exp1 -> '[' Exp4 ']' Exp1                          (11)
	Exp1 -> Exp2                                       (12)
	Exp -> Decl ';' Exp                                (13)
	Exp -> Exp1                                        (14)
	Decl -> Id ':' Exp '=' Exp                         (15)
	ListExp ->                                         (16)
	ListExp -> Exp                                     (17)
	ListExp -> Exp ';' ListExp                         (18)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'->'           { PT _ (TS _ 4) }
	':'            { PT _ (TS _ 5) }
	';'            { PT _ (TS _ 6) }
	'='            { PT _ (TS _ 7) }
	'['            { PT _ (TS _ 8) }
	']'            { PT _ (TS _ 9) }
	L_Id           { PT _ (T_Id $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Id              rule  1
	Program         rule  2
	Exp4            rules 3, 4
	Exp3            rules 5, 6, 7
	Exp2            rules 8, 9
	Exp1            rules 10, 11, 12
	Exp             rules 13, 14
	Decl            rule  15
	ListExp         rules 16, 17, 18

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 2
	%eof           reduce using rule 16

	Id             goto state 3
	Program        goto state 4
	Exp4           goto state 5
	Exp3           goto state 6
	Exp2           goto state 7
	Exp1           goto state 8
	Exp            goto state 9
	Decl           goto state 10
	ListExp        goto state 11

State 1

	Id -> . L_Id                                        (rule 1)

	L_Id           shift, and enter state 2


State 2

	Id -> L_Id .                                        (rule 1)

	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'->'           reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'='            reduce using rule 1
	']'            reduce using rule 1
	L_Id           reduce using rule 1
	%eof           reduce using rule 1


State 3

	Exp4 -> Id . ':' Exp                                (rule 3)
	Exp3 -> Id .                                        (rule 5)
	Decl -> Id . ':' Exp '=' Exp                        (rule 15)

	'('            reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'->'           reduce using rule 5
	':'            shift, and enter state 23
	';'            reduce using rule 5
	'='            reduce using rule 5
	']'            reduce using rule 5
	L_Id           reduce using rule 5
	%eof           reduce using rule 5


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	Exp3 -> Exp4 .                                      (rule 7)

	'('            reduce using rule 7
	')'            reduce using rule 7
	'*'            reduce using rule 7
	'->'           reduce using rule 7
	';'            reduce using rule 7
	'='            reduce using rule 7
	']'            reduce using rule 7
	L_Id           reduce using rule 7
	%eof           reduce using rule 7


State 6

	Exp2 -> Exp3 .                                      (rule 9)

	'('            reduce using rule 9
	')'            reduce using rule 9
	'*'            reduce using rule 9
	'->'           reduce using rule 9
	';'            reduce using rule 9
	'='            reduce using rule 9
	']'            reduce using rule 9
	L_Id           reduce using rule 9
	%eof           reduce using rule 9


State 7

	Exp2 -> Exp2 . Exp3                                 (rule 8)
	Exp1 -> Exp2 . '->' Exp1                            (rule 10)
	Exp1 -> Exp2 .                                      (rule 12)

	'('            shift, and enter state 12
			(reduce using rule 12)

	')'            reduce using rule 12
	'*'            shift, and enter state 13
			(reduce using rule 12)

	'->'           shift, and enter state 22
			(reduce using rule 12)

	';'            reduce using rule 12
	'='            reduce using rule 12
	']'            reduce using rule 12
	L_Id           shift, and enter state 2
			(reduce using rule 12)

	%eof           reduce using rule 12

	Id             goto state 20
	Exp4           goto state 5
	Exp3           goto state 21

State 8

	Exp -> Exp1 .                                       (rule 14)

	'('            reduce using rule 14
	')'            reduce using rule 14
	'*'            reduce using rule 14
	'->'           reduce using rule 14
	';'            reduce using rule 14
	'='            reduce using rule 14
	']'            reduce using rule 14
	L_Id           reduce using rule 14
	%eof           reduce using rule 14


State 9

	ListExp -> Exp .                                    (rule 17)
	ListExp -> Exp . ';' ListExp                        (rule 18)

	';'            shift, and enter state 19
	%eof           reduce using rule 17


State 10

	Exp -> Decl . ';' Exp                               (rule 13)

	';'            shift, and enter state 18


State 11

	Program -> ListExp .                                (rule 2)

	%eof           reduce using rule 2


State 12

	Exp4 -> '(' . Exp ')'                               (rule 4)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 2

	Id             goto state 3
	Exp4           goto state 5
	Exp3           goto state 6
	Exp2           goto state 7
	Exp1           goto state 8
	Exp            goto state 17
	Decl           goto state 10

State 13

	Exp3 -> '*' .                                       (rule 6)

	'('            reduce using rule 6
	')'            reduce using rule 6
	'*'            reduce using rule 6
	'->'           reduce using rule 6
	';'            reduce using rule 6
	'='            reduce using rule 6
	']'            reduce using rule 6
	L_Id           reduce using rule 6
	%eof           reduce using rule 6


State 14

	Exp1 -> '[' . Exp4 ']' Exp1                         (rule 11)

	'('            shift, and enter state 12
	L_Id           shift, and enter state 2

	Id             goto state 15
	Exp4           goto state 16

State 15

	Exp4 -> Id . ':' Exp                                (rule 3)

	':'            shift, and enter state 26


State 16

	Exp1 -> '[' Exp4 . ']' Exp1                         (rule 11)

	']'            shift, and enter state 30


State 17

	Exp4 -> '(' Exp . ')'                               (rule 4)

	')'            shift, and enter state 29


State 18

	Exp -> Decl ';' . Exp                               (rule 13)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 2

	Id             goto state 3
	Exp4           goto state 5
	Exp3           goto state 6
	Exp2           goto state 7
	Exp1           goto state 8
	Exp            goto state 28
	Decl           goto state 10

State 19

	ListExp -> Exp ';' . ListExp                        (rule 18)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 2
	%eof           reduce using rule 16

	Id             goto state 3
	Exp4           goto state 5
	Exp3           goto state 6
	Exp2           goto state 7
	Exp1           goto state 8
	Exp            goto state 9
	Decl           goto state 10
	ListExp        goto state 27

State 20

	Exp4 -> Id . ':' Exp                                (rule 3)
	Exp3 -> Id .                                        (rule 5)

	'('            reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'->'           reduce using rule 5
	':'            shift, and enter state 26
	';'            reduce using rule 5
	'='            reduce using rule 5
	']'            reduce using rule 5
	L_Id           reduce using rule 5
	%eof           reduce using rule 5


State 21

	Exp2 -> Exp2 Exp3 .                                 (rule 8)

	'('            reduce using rule 8
	')'            reduce using rule 8
	'*'            reduce using rule 8
	'->'           reduce using rule 8
	';'            reduce using rule 8
	'='            reduce using rule 8
	']'            reduce using rule 8
	L_Id           reduce using rule 8
	%eof           reduce using rule 8


State 22

	Exp1 -> Exp2 '->' . Exp1                            (rule 10)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 2

	Id             goto state 20
	Exp4           goto state 5
	Exp3           goto state 6
	Exp2           goto state 7
	Exp1           goto state 25

State 23

	Exp4 -> Id ':' . Exp                                (rule 3)
	Decl -> Id ':' . Exp '=' Exp                        (rule 15)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 2

	Id             goto state 3
	Exp4           goto state 5
	Exp3           goto state 6
	Exp2           goto state 7
	Exp1           goto state 8
	Exp            goto state 24
	Decl           goto state 10

State 24

	Exp4 -> Id ':' Exp .                                (rule 3)
	Decl -> Id ':' Exp . '=' Exp                        (rule 15)

	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'->'           reduce using rule 3
	';'            reduce using rule 3
	'='            shift, and enter state 33
			(reduce using rule 3)

	']'            reduce using rule 3
	L_Id           reduce using rule 3
	%eof           reduce using rule 3


State 25

	Exp1 -> Exp2 '->' Exp1 .                            (rule 10)

	'('            reduce using rule 10
	')'            reduce using rule 10
	'*'            reduce using rule 10
	'->'           reduce using rule 10
	';'            reduce using rule 10
	'='            reduce using rule 10
	']'            reduce using rule 10
	L_Id           reduce using rule 10
	%eof           reduce using rule 10


State 26

	Exp4 -> Id ':' . Exp                                (rule 3)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 2

	Id             goto state 3
	Exp4           goto state 5
	Exp3           goto state 6
	Exp2           goto state 7
	Exp1           goto state 8
	Exp            goto state 32
	Decl           goto state 10

State 27

	ListExp -> Exp ';' ListExp .                        (rule 18)

	%eof           reduce using rule 18


State 28

	Exp -> Decl ';' Exp .                               (rule 13)

	'('            reduce using rule 13
	')'            reduce using rule 13
	'*'            reduce using rule 13
	'->'           reduce using rule 13
	';'            reduce using rule 13
	'='            reduce using rule 13
	']'            reduce using rule 13
	L_Id           reduce using rule 13
	%eof           reduce using rule 13


State 29

	Exp4 -> '(' Exp ')' .                               (rule 4)

	'('            reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'->'           reduce using rule 4
	';'            reduce using rule 4
	'='            reduce using rule 4
	']'            reduce using rule 4
	L_Id           reduce using rule 4
	%eof           reduce using rule 4


State 30

	Exp1 -> '[' Exp4 ']' . Exp1                         (rule 11)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 2

	Id             goto state 20
	Exp4           goto state 5
	Exp3           goto state 6
	Exp2           goto state 7
	Exp1           goto state 31

State 31

	Exp1 -> '[' Exp4 ']' Exp1 .                         (rule 11)

	'('            reduce using rule 11
	')'            reduce using rule 11
	'*'            reduce using rule 11
	'->'           reduce using rule 11
	';'            reduce using rule 11
	'='            reduce using rule 11
	']'            reduce using rule 11
	L_Id           reduce using rule 11
	%eof           reduce using rule 11


State 32

	Exp4 -> Id ':' Exp .                                (rule 3)

	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'->'           reduce using rule 3
	';'            reduce using rule 3
	'='            reduce using rule 3
	']'            reduce using rule 3
	L_Id           reduce using rule 3
	%eof           reduce using rule 3


State 33

	Decl -> Id ':' Exp '=' . Exp                        (rule 15)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 2

	Id             goto state 3
	Exp4           goto state 5
	Exp3           goto state 6
	Exp2           goto state 7
	Exp1           goto state 8
	Exp            goto state 34
	Decl           goto state 10

State 34

	Decl -> Id ':' Exp '=' Exp .                        (rule 15)

	';'            reduce using rule 15


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 19
Number of terminals: 10
Number of non-terminals: 10
Number of states: 35
