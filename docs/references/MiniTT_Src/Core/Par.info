-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Core/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pExp1 -> Exp1                               (0)
	%start_pExp3 -> Exp3                               (1)
	%start_pExp -> Exp                                 (2)
	%start_pExp2 -> Exp2                               (3)
	%start_pDecl -> Decl                               (4)
	%start_pPatt -> Patt                               (5)
	%start_pPatt1 -> Patt1                             (6)
	%start_pSummand -> Summand                         (7)
	%start_pListSummand -> ListSummand                 (8)
	%start_pBranch -> Branch                           (9)
	%start_pListBranch -> ListBranch                   (10)
	%start_pListIdent -> ListIdent                     (11)
	Ident -> L_Ident                                   (12)
	CaseTk -> L_CaseTk                                 (13)
	DataTk -> L_DataTk                                 (14)
	Exp1 -> '\\' Patt1 '.' Exp1                        (15)
	Exp1 -> 'Pi' Patt1 ':' Exp1 '.' Exp1               (16)
	Exp1 -> 'Sig' Patt1 ':' Exp1 '.' Exp1              (17)
	Exp1 -> DataTk '(' ListSummand ')'                 (18)
	Exp1 -> CaseTk '(' ListBranch ')'                  (19)
	Exp1 -> Decl ';' Exp1                              (20)
	Exp1 -> Exp2 '->' Exp1                             (21)
	Exp1 -> Exp2 '*' Exp1                              (22)
	Exp1 -> Exp2                                       (23)
	Exp3 -> 'U'                                        (24)
	Exp3 -> '1'                                        (25)
	Exp3 -> '0'                                        (26)
	Exp3 -> Exp3 '.1'                                  (27)
	Exp3 -> Exp3 '.2'                                  (28)
	Exp3 -> Ident                                      (29)
	Exp3 -> 'Void'                                     (30)
	Exp3 -> 'PN'                                       (31)
	Exp3 -> '(' Exp ')'                                (32)
	Exp -> Exp1 ',' Exp                                (33)
	Exp -> Exp1                                        (34)
	Exp2 -> '$' Ident Exp3                             (35)
	Exp2 -> Exp2 Exp3                                  (36)
	Exp2 -> Exp3                                       (37)
	Decl -> 'let' Patt1 ':' Exp1 '=' Exp1              (38)
	Decl -> 'letrec' Patt1 ':' Exp1 '=' Exp1           (39)
	Patt -> Patt1 ',' Patt                             (40)
	Patt -> Patt1                                      (41)
	Patt1 -> '_'                                       (42)
	Patt1 -> Ident                                     (43)
	Patt1 -> '(' Patt ')'                              (44)
	Summand -> Ident Exp3                              (45)
	ListSummand ->                                     (46)
	ListSummand -> Summand                             (47)
	ListSummand -> Summand '|' ListSummand             (48)
	Branch -> Ident '->' Exp1                          (49)
	ListBranch ->                                      (50)
	ListBranch -> Branch                               (51)
	ListBranch -> Branch '|' ListBranch                (52)
	ListIdent -> Ident                                 (53)
	ListIdent -> Ident ListIdent                       (54)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'$'            { PT _ (TS _ 1) }
	'('            { PT _ (TS _ 2) }
	')'            { PT _ (TS _ 3) }
	'*'            { PT _ (TS _ 4) }
	','            { PT _ (TS _ 5) }
	'->'           { PT _ (TS _ 6) }
	'.'            { PT _ (TS _ 7) }
	'.1'           { PT _ (TS _ 8) }
	'.2'           { PT _ (TS _ 9) }
	'0'            { PT _ (TS _ 10) }
	'1'            { PT _ (TS _ 11) }
	':'            { PT _ (TS _ 12) }
	';'            { PT _ (TS _ 13) }
	'='            { PT _ (TS _ 14) }
	'PN'           { PT _ (TS _ 15) }
	'Pi'           { PT _ (TS _ 16) }
	'Sig'          { PT _ (TS _ 17) }
	'U'            { PT _ (TS _ 18) }
	'Void'         { PT _ (TS _ 19) }
	'\\'           { PT _ (TS _ 20) }
	'_'            { PT _ (TS _ 21) }
	'let'          { PT _ (TS _ 22) }
	'letrec'       { PT _ (TS _ 23) }
	'|'            { PT _ (TS _ 24) }
	L_Ident        { PT _ (TV $$) }
	L_CaseTk       { PT _ (T_CaseTk _) }
	L_DataTk       { PT _ (T_DataTk _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pExp1    rule  0
	%start_pExp3    rule  1
	%start_pExp     rule  2
	%start_pExp2    rule  3
	%start_pDecl    rule  4
	%start_pPatt    rule  5
	%start_pPatt1   rule  6
	%start_pSummand rule  7
	%start_pListSummand rule  8
	%start_pBranch  rule  9
	%start_pListBranch rule  10
	%start_pListIdent rule  11
	Ident           rule  12
	CaseTk          rule  13
	DataTk          rule  14
	Exp1            rules 15, 16, 17, 18, 19, 20, 21, 22, 23
	Exp3            rules 24, 25, 26, 27, 28, 29, 30, 31, 32
	Exp             rules 33, 34
	Exp2            rules 35, 36, 37
	Decl            rules 38, 39
	Patt            rules 40, 41
	Patt1           rules 42, 43, 44
	Summand         rule  45
	ListSummand     rules 46, 47, 48
	Branch          rule  49
	ListBranch      rules 50, 51, 52
	ListIdent       rules 53, 54

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pExp1 -> . Exp1                              (rule 0)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 55
	Exp3           goto state 34
	Exp2           goto state 47
	Decl           goto state 48

State 1

	%start_pExp3 -> . Exp3                              (rule 1)

	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	L_Ident        shift, and enter state 13

	Ident          goto state 33
	Exp3           goto state 54

State 2

	%start_pExp -> . Exp                                (rule 2)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 45
	Exp3           goto state 34
	Exp            goto state 46
	Exp2           goto state 47
	Decl           goto state 48

State 3

	%start_pExp2 -> . Exp2                              (rule 3)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	L_Ident        shift, and enter state 13

	Ident          goto state 33
	Exp3           goto state 34
	Exp2           goto state 35

State 4

	%start_pDecl -> . Decl                              (rule 4)

	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32

	Decl           goto state 30

State 5

	%start_pPatt -> . Patt                              (rule 5)

	'('            shift, and enter state 26
	'_'            shift, and enter state 27
	L_Ident        shift, and enter state 13

	Ident          goto state 24
	Patt           goto state 28
	Patt1          goto state 29

State 6

	%start_pPatt1 -> . Patt1                            (rule 6)

	'('            shift, and enter state 26
	'_'            shift, and enter state 27
	L_Ident        shift, and enter state 13

	Ident          goto state 24
	Patt1          goto state 25

State 7

	%start_pSummand -> . Summand                        (rule 7)

	L_Ident        shift, and enter state 13

	Ident          goto state 20
	Summand        goto state 23

State 8

	%start_pListSummand -> . ListSummand                (rule 8)

	L_Ident        shift, and enter state 13
	%eof           reduce using rule 46

	Ident          goto state 20
	Summand        goto state 21
	ListSummand    goto state 22

State 9

	%start_pBranch -> . Branch                          (rule 9)

	L_Ident        shift, and enter state 13

	Ident          goto state 16
	Branch         goto state 19

State 10

	%start_pListBranch -> . ListBranch                  (rule 10)

	L_Ident        shift, and enter state 13
	%eof           reduce using rule 50

	Ident          goto state 16
	Branch         goto state 17
	ListBranch     goto state 18

State 11

	%start_pListIdent -> . ListIdent                    (rule 11)

	L_Ident        shift, and enter state 13

	Ident          goto state 14
	ListIdent      goto state 15

State 12

	Ident -> . L_Ident                                  (rule 12)

	L_Ident        shift, and enter state 13


State 13

	Ident -> L_Ident .                                  (rule 12)

	'('            reduce using rule 12
	')'            reduce using rule 12
	'*'            reduce using rule 12
	','            reduce using rule 12
	'->'           reduce using rule 12
	'.'            reduce using rule 12
	'.1'           reduce using rule 12
	'.2'           reduce using rule 12
	'0'            reduce using rule 12
	'1'            reduce using rule 12
	':'            reduce using rule 12
	';'            reduce using rule 12
	'='            reduce using rule 12
	'PN'           reduce using rule 12
	'U'            reduce using rule 12
	'Void'         reduce using rule 12
	'|'            reduce using rule 12
	L_Ident        reduce using rule 12
	%eof           reduce using rule 12


State 14

	ListIdent -> Ident .                                (rule 53)
	ListIdent -> Ident . ListIdent                      (rule 54)

	L_Ident        shift, and enter state 13
	%eof           reduce using rule 53

	Ident          goto state 14
	ListIdent      goto state 78

State 15

	%start_pListIdent -> ListIdent .                    (rule 11)

	%eof           accept


State 16

	Branch -> Ident . '->' Exp1                         (rule 49)

	'->'           shift, and enter state 77


State 17

	ListBranch -> Branch .                              (rule 51)
	ListBranch -> Branch . '|' ListBranch               (rule 52)

	')'            reduce using rule 51
	'|'            shift, and enter state 76
	%eof           reduce using rule 51


State 18

	%start_pListBranch -> ListBranch .                  (rule 10)

	%eof           accept


State 19

	%start_pBranch -> Branch .                          (rule 9)

	%eof           accept


State 20

	Summand -> Ident . Exp3                             (rule 45)

	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	L_Ident        shift, and enter state 13

	Ident          goto state 33
	Exp3           goto state 75

State 21

	ListSummand -> Summand .                            (rule 47)
	ListSummand -> Summand . '|' ListSummand            (rule 48)

	')'            reduce using rule 47
	'|'            shift, and enter state 74
	%eof           reduce using rule 47


State 22

	%start_pListSummand -> ListSummand .                (rule 8)

	%eof           accept


State 23

	%start_pSummand -> Summand .                        (rule 7)

	%eof           accept


State 24

	Patt1 -> Ident .                                    (rule 43)

	')'            reduce using rule 43
	','            reduce using rule 43
	'.'            reduce using rule 43
	':'            reduce using rule 43
	%eof           reduce using rule 43


State 25

	%start_pPatt1 -> Patt1 .                            (rule 6)

	%eof           accept


State 26

	Patt1 -> '(' . Patt ')'                             (rule 44)

	'('            shift, and enter state 26
	'_'            shift, and enter state 27
	L_Ident        shift, and enter state 13

	Ident          goto state 24
	Patt           goto state 73
	Patt1          goto state 29

State 27

	Patt1 -> '_' .                                      (rule 42)

	')'            reduce using rule 42
	','            reduce using rule 42
	'.'            reduce using rule 42
	':'            reduce using rule 42
	%eof           reduce using rule 42


State 28

	%start_pPatt -> Patt .                              (rule 5)

	%eof           accept


State 29

	Patt -> Patt1 . ',' Patt                            (rule 40)
	Patt -> Patt1 .                                     (rule 41)

	')'            reduce using rule 41
	','            shift, and enter state 72
	%eof           reduce using rule 41


State 30

	%start_pDecl -> Decl .                              (rule 4)

	%eof           accept


State 31

	Decl -> 'let' . Patt1 ':' Exp1 '=' Exp1             (rule 38)

	'('            shift, and enter state 26
	'_'            shift, and enter state 27
	L_Ident        shift, and enter state 13

	Ident          goto state 24
	Patt1          goto state 71

State 32

	Decl -> 'letrec' . Patt1 ':' Exp1 '=' Exp1          (rule 39)

	'('            shift, and enter state 26
	'_'            shift, and enter state 27
	L_Ident        shift, and enter state 13

	Ident          goto state 24
	Patt1          goto state 70

State 33

	Exp3 -> Ident .                                     (rule 29)

	'('            reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	','            reduce using rule 29
	'->'           reduce using rule 29
	'.'            reduce using rule 29
	'.1'           reduce using rule 29
	'.2'           reduce using rule 29
	'0'            reduce using rule 29
	'1'            reduce using rule 29
	';'            reduce using rule 29
	'='            reduce using rule 29
	'PN'           reduce using rule 29
	'U'            reduce using rule 29
	'Void'         reduce using rule 29
	'|'            reduce using rule 29
	L_Ident        reduce using rule 29
	%eof           reduce using rule 29


State 34

	Exp3 -> Exp3 . '.1'                                 (rule 27)
	Exp3 -> Exp3 . '.2'                                 (rule 28)
	Exp2 -> Exp3 .                                      (rule 37)

	'('            reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	','            reduce using rule 37
	'->'           reduce using rule 37
	'.'            reduce using rule 37
	'.1'           shift, and enter state 56
	'.2'           shift, and enter state 57
	'0'            reduce using rule 37
	'1'            reduce using rule 37
	';'            reduce using rule 37
	'='            reduce using rule 37
	'PN'           reduce using rule 37
	'U'            reduce using rule 37
	'Void'         reduce using rule 37
	'|'            reduce using rule 37
	L_Ident        reduce using rule 37
	%eof           reduce using rule 37


State 35

	%start_pExp2 -> Exp2 .                              (rule 3)
	Exp2 -> Exp2 . Exp3                                 (rule 36)

	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	L_Ident        shift, and enter state 13
	%eof           accept

	Ident          goto state 33
	Exp3           goto state 62

State 36

	Exp2 -> '$' . Ident Exp3                            (rule 35)

	L_Ident        shift, and enter state 13

	Ident          goto state 69

State 37

	Exp3 -> '(' . Exp ')'                               (rule 32)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 45
	Exp3           goto state 34
	Exp            goto state 68
	Exp2           goto state 47
	Decl           goto state 48

State 38

	Exp3 -> '0' .                                       (rule 26)

	'('            reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	','            reduce using rule 26
	'->'           reduce using rule 26
	'.'            reduce using rule 26
	'.1'           reduce using rule 26
	'.2'           reduce using rule 26
	'0'            reduce using rule 26
	'1'            reduce using rule 26
	';'            reduce using rule 26
	'='            reduce using rule 26
	'PN'           reduce using rule 26
	'U'            reduce using rule 26
	'Void'         reduce using rule 26
	'|'            reduce using rule 26
	L_Ident        reduce using rule 26
	%eof           reduce using rule 26


State 39

	Exp3 -> '1' .                                       (rule 25)

	'('            reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	','            reduce using rule 25
	'->'           reduce using rule 25
	'.'            reduce using rule 25
	'.1'           reduce using rule 25
	'.2'           reduce using rule 25
	'0'            reduce using rule 25
	'1'            reduce using rule 25
	';'            reduce using rule 25
	'='            reduce using rule 25
	'PN'           reduce using rule 25
	'U'            reduce using rule 25
	'Void'         reduce using rule 25
	'|'            reduce using rule 25
	L_Ident        reduce using rule 25
	%eof           reduce using rule 25


State 40

	Exp3 -> 'PN' .                                      (rule 31)

	'('            reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	','            reduce using rule 31
	'->'           reduce using rule 31
	'.'            reduce using rule 31
	'.1'           reduce using rule 31
	'.2'           reduce using rule 31
	'0'            reduce using rule 31
	'1'            reduce using rule 31
	';'            reduce using rule 31
	'='            reduce using rule 31
	'PN'           reduce using rule 31
	'U'            reduce using rule 31
	'Void'         reduce using rule 31
	'|'            reduce using rule 31
	L_Ident        reduce using rule 31
	%eof           reduce using rule 31


State 41

	Exp3 -> 'U' .                                       (rule 24)

	'('            reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	','            reduce using rule 24
	'->'           reduce using rule 24
	'.'            reduce using rule 24
	'.1'           reduce using rule 24
	'.2'           reduce using rule 24
	'0'            reduce using rule 24
	'1'            reduce using rule 24
	';'            reduce using rule 24
	'='            reduce using rule 24
	'PN'           reduce using rule 24
	'U'            reduce using rule 24
	'Void'         reduce using rule 24
	'|'            reduce using rule 24
	L_Ident        reduce using rule 24
	%eof           reduce using rule 24


State 42

	Exp3 -> 'Void' .                                    (rule 30)

	'('            reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	','            reduce using rule 30
	'->'           reduce using rule 30
	'.'            reduce using rule 30
	'.1'           reduce using rule 30
	'.2'           reduce using rule 30
	'0'            reduce using rule 30
	'1'            reduce using rule 30
	';'            reduce using rule 30
	'='            reduce using rule 30
	'PN'           reduce using rule 30
	'U'            reduce using rule 30
	'Void'         reduce using rule 30
	'|'            reduce using rule 30
	L_Ident        reduce using rule 30
	%eof           reduce using rule 30


State 43

	Exp1 -> CaseTk . '(' ListBranch ')'                 (rule 19)

	'('            shift, and enter state 67


State 44

	Exp1 -> DataTk . '(' ListSummand ')'                (rule 18)

	'('            shift, and enter state 66


State 45

	Exp -> Exp1 . ',' Exp                               (rule 33)
	Exp -> Exp1 .                                       (rule 34)

	')'            reduce using rule 34
	','            shift, and enter state 65
	%eof           reduce using rule 34


State 46

	%start_pExp -> Exp .                                (rule 2)

	%eof           accept


State 47

	Exp1 -> Exp2 . '->' Exp1                            (rule 21)
	Exp1 -> Exp2 . '*' Exp1                             (rule 22)
	Exp1 -> Exp2 .                                      (rule 23)
	Exp2 -> Exp2 . Exp3                                 (rule 36)

	'('            shift, and enter state 37
	')'            reduce using rule 23
	'*'            shift, and enter state 63
	','            reduce using rule 23
	'->'           shift, and enter state 64
	'.'            reduce using rule 23
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	';'            reduce using rule 23
	'='            reduce using rule 23
	'PN'           shift, and enter state 40
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'|'            reduce using rule 23
	L_Ident        shift, and enter state 13
	%eof           reduce using rule 23

	Ident          goto state 33
	Exp3           goto state 62

State 48

	Exp1 -> Decl . ';' Exp1                             (rule 20)

	';'            shift, and enter state 61


State 49

	Exp1 -> 'Pi' . Patt1 ':' Exp1 '.' Exp1              (rule 16)

	'('            shift, and enter state 26
	'_'            shift, and enter state 27
	L_Ident        shift, and enter state 13

	Ident          goto state 24
	Patt1          goto state 60

State 50

	Exp1 -> 'Sig' . Patt1 ':' Exp1 '.' Exp1             (rule 17)

	'('            shift, and enter state 26
	'_'            shift, and enter state 27
	L_Ident        shift, and enter state 13

	Ident          goto state 24
	Patt1          goto state 59

State 51

	Exp1 -> '\\' . Patt1 '.' Exp1                       (rule 15)

	'('            shift, and enter state 26
	'_'            shift, and enter state 27
	L_Ident        shift, and enter state 13

	Ident          goto state 24
	Patt1          goto state 58

State 52

	CaseTk -> L_CaseTk .                                (rule 13)

	'('            reduce using rule 13


State 53

	DataTk -> L_DataTk .                                (rule 14)

	'('            reduce using rule 14


State 54

	%start_pExp3 -> Exp3 .                              (rule 1)
	Exp3 -> Exp3 . '.1'                                 (rule 27)
	Exp3 -> Exp3 . '.2'                                 (rule 28)

	'.1'           shift, and enter state 56
	'.2'           shift, and enter state 57
	%eof           accept


State 55

	%start_pExp1 -> Exp1 .                              (rule 0)

	%eof           accept


State 56

	Exp3 -> Exp3 '.1' .                                 (rule 27)

	'('            reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	','            reduce using rule 27
	'->'           reduce using rule 27
	'.'            reduce using rule 27
	'.1'           reduce using rule 27
	'.2'           reduce using rule 27
	'0'            reduce using rule 27
	'1'            reduce using rule 27
	';'            reduce using rule 27
	'='            reduce using rule 27
	'PN'           reduce using rule 27
	'U'            reduce using rule 27
	'Void'         reduce using rule 27
	'|'            reduce using rule 27
	L_Ident        reduce using rule 27
	%eof           reduce using rule 27


State 57

	Exp3 -> Exp3 '.2' .                                 (rule 28)

	'('            reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	','            reduce using rule 28
	'->'           reduce using rule 28
	'.'            reduce using rule 28
	'.1'           reduce using rule 28
	'.2'           reduce using rule 28
	'0'            reduce using rule 28
	'1'            reduce using rule 28
	';'            reduce using rule 28
	'='            reduce using rule 28
	'PN'           reduce using rule 28
	'U'            reduce using rule 28
	'Void'         reduce using rule 28
	'|'            reduce using rule 28
	L_Ident        reduce using rule 28
	%eof           reduce using rule 28


State 58

	Exp1 -> '\\' Patt1 . '.' Exp1                       (rule 15)

	'.'            shift, and enter state 96


State 59

	Exp1 -> 'Sig' Patt1 . ':' Exp1 '.' Exp1             (rule 17)

	':'            shift, and enter state 95


State 60

	Exp1 -> 'Pi' Patt1 . ':' Exp1 '.' Exp1              (rule 16)

	':'            shift, and enter state 94


State 61

	Exp1 -> Decl ';' . Exp1                             (rule 20)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 93
	Exp3           goto state 34
	Exp2           goto state 47
	Decl           goto state 48

State 62

	Exp3 -> Exp3 . '.1'                                 (rule 27)
	Exp3 -> Exp3 . '.2'                                 (rule 28)
	Exp2 -> Exp2 Exp3 .                                 (rule 36)

	'('            reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	','            reduce using rule 36
	'->'           reduce using rule 36
	'.'            reduce using rule 36
	'.1'           shift, and enter state 56
	'.2'           shift, and enter state 57
	'0'            reduce using rule 36
	'1'            reduce using rule 36
	';'            reduce using rule 36
	'='            reduce using rule 36
	'PN'           reduce using rule 36
	'U'            reduce using rule 36
	'Void'         reduce using rule 36
	'|'            reduce using rule 36
	L_Ident        reduce using rule 36
	%eof           reduce using rule 36


State 63

	Exp1 -> Exp2 '*' . Exp1                             (rule 22)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 92
	Exp3           goto state 34
	Exp2           goto state 47
	Decl           goto state 48

State 64

	Exp1 -> Exp2 '->' . Exp1                            (rule 21)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 91
	Exp3           goto state 34
	Exp2           goto state 47
	Decl           goto state 48

State 65

	Exp -> Exp1 ',' . Exp                               (rule 33)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 45
	Exp3           goto state 34
	Exp            goto state 90
	Exp2           goto state 47
	Decl           goto state 48

State 66

	Exp1 -> DataTk '(' . ListSummand ')'                (rule 18)

	')'            reduce using rule 46
	L_Ident        shift, and enter state 13

	Ident          goto state 20
	Summand        goto state 21
	ListSummand    goto state 89

State 67

	Exp1 -> CaseTk '(' . ListBranch ')'                 (rule 19)

	')'            reduce using rule 50
	L_Ident        shift, and enter state 13

	Ident          goto state 16
	Branch         goto state 17
	ListBranch     goto state 88

State 68

	Exp3 -> '(' Exp . ')'                               (rule 32)

	')'            shift, and enter state 87


State 69

	Exp2 -> '$' Ident . Exp3                            (rule 35)

	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	L_Ident        shift, and enter state 13

	Ident          goto state 33
	Exp3           goto state 86

State 70

	Decl -> 'letrec' Patt1 . ':' Exp1 '=' Exp1          (rule 39)

	':'            shift, and enter state 85


State 71

	Decl -> 'let' Patt1 . ':' Exp1 '=' Exp1             (rule 38)

	':'            shift, and enter state 84


State 72

	Patt -> Patt1 ',' . Patt                            (rule 40)

	'('            shift, and enter state 26
	'_'            shift, and enter state 27
	L_Ident        shift, and enter state 13

	Ident          goto state 24
	Patt           goto state 83
	Patt1          goto state 29

State 73

	Patt1 -> '(' Patt . ')'                             (rule 44)

	')'            shift, and enter state 82


State 74

	ListSummand -> Summand '|' . ListSummand            (rule 48)

	')'            reduce using rule 46
	L_Ident        shift, and enter state 13
	%eof           reduce using rule 46

	Ident          goto state 20
	Summand        goto state 21
	ListSummand    goto state 81

State 75

	Exp3 -> Exp3 . '.1'                                 (rule 27)
	Exp3 -> Exp3 . '.2'                                 (rule 28)
	Summand -> Ident Exp3 .                             (rule 45)

	')'            reduce using rule 45
	'.1'           shift, and enter state 56
	'.2'           shift, and enter state 57
	'|'            reduce using rule 45
	%eof           reduce using rule 45


State 76

	ListBranch -> Branch '|' . ListBranch               (rule 52)

	')'            reduce using rule 50
	L_Ident        shift, and enter state 13
	%eof           reduce using rule 50

	Ident          goto state 16
	Branch         goto state 17
	ListBranch     goto state 80

State 77

	Branch -> Ident '->' . Exp1                         (rule 49)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 79
	Exp3           goto state 34
	Exp2           goto state 47
	Decl           goto state 48

State 78

	ListIdent -> Ident ListIdent .                      (rule 54)

	%eof           reduce using rule 54


State 79

	Branch -> Ident '->' Exp1 .                         (rule 49)

	')'            reduce using rule 49
	'|'            reduce using rule 49
	%eof           reduce using rule 49


State 80

	ListBranch -> Branch '|' ListBranch .               (rule 52)

	')'            reduce using rule 52
	%eof           reduce using rule 52


State 81

	ListSummand -> Summand '|' ListSummand .            (rule 48)

	')'            reduce using rule 48
	%eof           reduce using rule 48


State 82

	Patt1 -> '(' Patt ')' .                             (rule 44)

	')'            reduce using rule 44
	','            reduce using rule 44
	'.'            reduce using rule 44
	':'            reduce using rule 44
	%eof           reduce using rule 44


State 83

	Patt -> Patt1 ',' Patt .                            (rule 40)

	')'            reduce using rule 40
	%eof           reduce using rule 40


State 84

	Decl -> 'let' Patt1 ':' . Exp1 '=' Exp1             (rule 38)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 103
	Exp3           goto state 34
	Exp2           goto state 47
	Decl           goto state 48

State 85

	Decl -> 'letrec' Patt1 ':' . Exp1 '=' Exp1          (rule 39)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 102
	Exp3           goto state 34
	Exp2           goto state 47
	Decl           goto state 48

State 86

	Exp3 -> Exp3 . '.1'                                 (rule 27)
	Exp3 -> Exp3 . '.2'                                 (rule 28)
	Exp2 -> '$' Ident Exp3 .                            (rule 35)

	'('            reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	','            reduce using rule 35
	'->'           reduce using rule 35
	'.'            reduce using rule 35
	'.1'           shift, and enter state 56
	'.2'           shift, and enter state 57
	'0'            reduce using rule 35
	'1'            reduce using rule 35
	';'            reduce using rule 35
	'='            reduce using rule 35
	'PN'           reduce using rule 35
	'U'            reduce using rule 35
	'Void'         reduce using rule 35
	'|'            reduce using rule 35
	L_Ident        reduce using rule 35
	%eof           reduce using rule 35


State 87

	Exp3 -> '(' Exp ')' .                               (rule 32)

	'('            reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	','            reduce using rule 32
	'->'           reduce using rule 32
	'.'            reduce using rule 32
	'.1'           reduce using rule 32
	'.2'           reduce using rule 32
	'0'            reduce using rule 32
	'1'            reduce using rule 32
	';'            reduce using rule 32
	'='            reduce using rule 32
	'PN'           reduce using rule 32
	'U'            reduce using rule 32
	'Void'         reduce using rule 32
	'|'            reduce using rule 32
	L_Ident        reduce using rule 32
	%eof           reduce using rule 32


State 88

	Exp1 -> CaseTk '(' ListBranch . ')'                 (rule 19)

	')'            shift, and enter state 101


State 89

	Exp1 -> DataTk '(' ListSummand . ')'                (rule 18)

	')'            shift, and enter state 100


State 90

	Exp -> Exp1 ',' Exp .                               (rule 33)

	')'            reduce using rule 33
	%eof           reduce using rule 33


State 91

	Exp1 -> Exp2 '->' Exp1 .                            (rule 21)

	')'            reduce using rule 21
	','            reduce using rule 21
	'.'            reduce using rule 21
	';'            reduce using rule 21
	'='            reduce using rule 21
	'|'            reduce using rule 21
	%eof           reduce using rule 21


State 92

	Exp1 -> Exp2 '*' Exp1 .                             (rule 22)

	')'            reduce using rule 22
	','            reduce using rule 22
	'.'            reduce using rule 22
	';'            reduce using rule 22
	'='            reduce using rule 22
	'|'            reduce using rule 22
	%eof           reduce using rule 22


State 93

	Exp1 -> Decl ';' Exp1 .                             (rule 20)

	')'            reduce using rule 20
	','            reduce using rule 20
	'.'            reduce using rule 20
	';'            reduce using rule 20
	'='            reduce using rule 20
	'|'            reduce using rule 20
	%eof           reduce using rule 20


State 94

	Exp1 -> 'Pi' Patt1 ':' . Exp1 '.' Exp1              (rule 16)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 99
	Exp3           goto state 34
	Exp2           goto state 47
	Decl           goto state 48

State 95

	Exp1 -> 'Sig' Patt1 ':' . Exp1 '.' Exp1             (rule 17)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 98
	Exp3           goto state 34
	Exp2           goto state 47
	Decl           goto state 48

State 96

	Exp1 -> '\\' Patt1 '.' . Exp1                       (rule 15)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 97
	Exp3           goto state 34
	Exp2           goto state 47
	Decl           goto state 48

State 97

	Exp1 -> '\\' Patt1 '.' Exp1 .                       (rule 15)

	')'            reduce using rule 15
	','            reduce using rule 15
	'.'            reduce using rule 15
	';'            reduce using rule 15
	'='            reduce using rule 15
	'|'            reduce using rule 15
	%eof           reduce using rule 15


State 98

	Exp1 -> 'Sig' Patt1 ':' Exp1 . '.' Exp1             (rule 17)

	'.'            shift, and enter state 107


State 99

	Exp1 -> 'Pi' Patt1 ':' Exp1 . '.' Exp1              (rule 16)

	'.'            shift, and enter state 106


State 100

	Exp1 -> DataTk '(' ListSummand ')' .                (rule 18)

	')'            reduce using rule 18
	','            reduce using rule 18
	'.'            reduce using rule 18
	';'            reduce using rule 18
	'='            reduce using rule 18
	'|'            reduce using rule 18
	%eof           reduce using rule 18


State 101

	Exp1 -> CaseTk '(' ListBranch ')' .                 (rule 19)

	')'            reduce using rule 19
	','            reduce using rule 19
	'.'            reduce using rule 19
	';'            reduce using rule 19
	'='            reduce using rule 19
	'|'            reduce using rule 19
	%eof           reduce using rule 19


State 102

	Decl -> 'letrec' Patt1 ':' Exp1 . '=' Exp1          (rule 39)

	'='            shift, and enter state 105


State 103

	Decl -> 'let' Patt1 ':' Exp1 . '=' Exp1             (rule 38)

	'='            shift, and enter state 104


State 104

	Decl -> 'let' Patt1 ':' Exp1 '=' . Exp1             (rule 38)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 111
	Exp3           goto state 34
	Exp2           goto state 47
	Decl           goto state 48

State 105

	Decl -> 'letrec' Patt1 ':' Exp1 '=' . Exp1          (rule 39)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 110
	Exp3           goto state 34
	Exp2           goto state 47
	Decl           goto state 48

State 106

	Exp1 -> 'Pi' Patt1 ':' Exp1 '.' . Exp1              (rule 16)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 109
	Exp3           goto state 34
	Exp2           goto state 47
	Decl           goto state 48

State 107

	Exp1 -> 'Sig' Patt1 ':' Exp1 '.' . Exp1             (rule 17)

	'$'            shift, and enter state 36
	'('            shift, and enter state 37
	'0'            shift, and enter state 38
	'1'            shift, and enter state 39
	'PN'           shift, and enter state 40
	'Pi'           shift, and enter state 49
	'Sig'          shift, and enter state 50
	'U'            shift, and enter state 41
	'Void'         shift, and enter state 42
	'\\'           shift, and enter state 51
	'let'          shift, and enter state 31
	'letrec'       shift, and enter state 32
	L_Ident        shift, and enter state 13
	L_CaseTk       shift, and enter state 52
	L_DataTk       shift, and enter state 53

	Ident          goto state 33
	CaseTk         goto state 43
	DataTk         goto state 44
	Exp1           goto state 108
	Exp3           goto state 34
	Exp2           goto state 47
	Decl           goto state 48

State 108

	Exp1 -> 'Sig' Patt1 ':' Exp1 '.' Exp1 .             (rule 17)

	')'            reduce using rule 17
	','            reduce using rule 17
	'.'            reduce using rule 17
	';'            reduce using rule 17
	'='            reduce using rule 17
	'|'            reduce using rule 17
	%eof           reduce using rule 17


State 109

	Exp1 -> 'Pi' Patt1 ':' Exp1 '.' Exp1 .              (rule 16)

	')'            reduce using rule 16
	','            reduce using rule 16
	'.'            reduce using rule 16
	';'            reduce using rule 16
	'='            reduce using rule 16
	'|'            reduce using rule 16
	%eof           reduce using rule 16


State 110

	Decl -> 'letrec' Patt1 ':' Exp1 '=' Exp1 .          (rule 39)

	';'            reduce using rule 39
	%eof           reduce using rule 39


State 111

	Decl -> 'let' Patt1 ':' Exp1 '=' Exp1 .             (rule 38)

	';'            reduce using rule 38
	%eof           reduce using rule 38


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 55
Number of terminals: 27
Number of non-terminals: 27
Number of states: 112
